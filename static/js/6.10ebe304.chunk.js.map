{"version":3,"sources":["services/SearchApi.js","pages/pagesStyle/pages.module.css","components/cast/cast.module.css","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","components/MovieContainer/index.jsx","components/cast/noImg.png","components/cast/index.jsx","components/reviews/index.jsx","components/InfoContent/index.jsx","pages/MovieDetailsPage/index.jsx"],"names":["API_KEY","BASE_URL","SearchApi","fetchTrendingMovies","a","axios","get","response","data","results","fetchDetails","id","fetchCredits","cast","fetchReviews","fetchMovieSearching","query","module","exports","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","MovieContent","backdrop_path","original_title","vote_average","overview","genres","poster_path","src","alt","map","genre","name","join","Cast","className","style","castList","profile_path","character","card","castImg","noImg","cardBody","Reviews","reviews","author","content","ulRef","createRef","InfoContent","state","pathState","this","setState","props","location","current","scrollIntoView","behavior","match","to","pathname","url","from","ref","path","render","Component","MovieDetailsPage","movie","handleGoBack","history","routes","movies","movieId","params","containerFluid","type","btnOutback","onClick"],"mappings":"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","file":"static/js/6.10ebe304.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst API_KEY = '9a8847c3aa731c652a1c3824b2fe37ec';\r\nconst BASE_URL = 'https://api.themoviedb.org/3';\r\n\r\nconst fetchTrendingMovies = async () => {\r\n  const response = await axios.get(\r\n    `${BASE_URL}/trending/all/day?api_key=${API_KEY}`,\r\n  );\r\n  return response.data.results;\r\n};\r\n\r\nconst fetchDetails = async id => {\r\n  const response = await axios.get(`${BASE_URL}/movie/${id}?api_key=${API_KEY}`);\r\n  return response.data;\r\n};\r\n\r\nconst fetchCredits = async id => {\r\n  const response = await axios.get(\r\n    `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}`,\r\n  );\r\n  return response.data.cast;\r\n};\r\n\r\nconst fetchReviews = async id => {\r\n  const response = await axios.get(\r\n    `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}`,\r\n  );\r\n  return response.data.results;\r\n};\r\n\r\nconst fetchMovieSearching = async query => {\r\n  const response = await axios.get(\r\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}`,\r\n  );\r\n  return response.data.results;\r\n};\r\n\r\n// export default {\r\n//   fetchTrendingMovies,\r\n//   fetchDetails,\r\n//   fetchCredits,\r\n//   fetchReviews,\r\n//   fetchMovieSearching,\r\n// };\r\n\r\nconst SearchApi = {\r\n  fetchTrendingMovies,\r\n  fetchDetails,\r\n  fetchCredits,\r\n  fetchReviews,\r\n  fetchMovieSearching\r\n}\r\n\r\nexport default SearchApi;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"containerFluid\":\"pages_containerFluid__2wa3g\",\"btnOutback\":\"pages_btnOutback__2Z6MB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"castList\":\"cast_castList__1eM4B\"};","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","const IMG_URL = 'https://image.tmdb.org/t/p/w500'\r\n\r\nconst MovieContent = ({ backdrop_path, original_title, vote_average, overview, genres, poster_path }) => {\r\n  return (\r\n    <>\r\n      <h1>{original_title}</h1>\r\n      <img src={`${IMG_URL}/${backdrop_path || poster_path}`} alt={`Poster of ${original_title}`} />\r\n      <p>User score: {vote_average * 10}%</p>\r\n      <h2>Overview</h2>\r\n      <p>{overview}</p>\r\n      <h2>Genres</h2>\r\n      <p>{genres.map(genre => genre.name).join(' ')}</p>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default MovieContent;","export default __webpack_public_path__ + \"static/media/noImg.0b19f0b7.png\";","import noImg from './noImg.png'\r\nimport style from './cast.module.css';\r\n\r\n\r\nconst IMG_URL = 'https://image.tmdb.org/t/p/w200'\r\n\r\nconst Cast = ({ cast }) => {\r\n  return (\r\n    <ul className={style.castList}>\r\n      {cast.map(({ id, profile_path, name, character }) => (\r\n        <li key={id}>\r\n          <div className={style.card}>\r\n            {<img className={style.castImg} src={profile_path ? `${IMG_URL}${profile_path}` : noImg} alt={`${name}`} />}\r\n            <div className={style.cardBody}>\r\n              <p>Actor: <strong>{name}</strong></p>\r\n              <p>Character: <strong>{character}</strong></p>\r\n            </div>\r\n          </div>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default Cast;","const Reviews = ({ reviews }) => {\r\n  return (\r\n    <ul>\r\n      {reviews.map(({ id, author, content }) => (\r\n        <li key={id}>\r\n          <h4>Author: {author}</h4>\r\n          <p>{content}</p>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default Reviews;","import React, { Component, createRef } from 'react';\r\nimport { NavLink, Route } from 'react-router-dom';\r\nimport Cast from '../cast';\r\nimport Reviews from '../reviews';\r\nimport '../../index.css'\r\n\r\nconst ulRef = createRef()\r\n\r\nclass InfoContent extends Component {\r\n  state = {\r\n    pathState: {}\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ pathState: this.props.location?.state });\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    ulRef.current.scrollIntoView({ behavior: \"smooth\" })\r\n  }\r\n\r\n  render() {\r\n    const { match, cast, reviews } = this.props\r\n    return (\r\n      <>\r\n        <h3>Additional info</h3>\r\n        <ul>\r\n          <li>\r\n            <NavLink to={{ pathname: `${match.url}/cast`, state: { from: this.state.pathState.from } }}>Cast</NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink to={{ pathname: `${match.url}/reviews`, state: { from: this.state.pathState.from } }}>Reviews</NavLink>\r\n          </li>\r\n        </ul>\r\n\r\n        <div ref={ulRef}>\r\n          {cast &&\r\n            <Route\r\n              path={`${match.path}/cast`}\r\n              render={() => {\r\n                return <Cast cast={cast} />\r\n              }}\r\n            />}\r\n\r\n          {reviews &&\r\n            <Route\r\n              path={`${match.path}/reviews`}\r\n              render={(props) => {\r\n                return <Reviews reviews={reviews} />\r\n              }}\r\n\r\n            />}\r\n        </div>\r\n      </>\r\n    );\r\n  };\r\n};\r\n\r\nexport default InfoContent;","import React, { Component } from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport SearchApi from '../../services/SearchApi';\r\nimport MovieContent from '../../components/MovieContainer';\r\nimport InfoContent from '../../components/InfoContent';\r\nimport routes from '../../routes';\r\nimport style from '../pagesStyle/pages.module.css';\r\n\r\nclass MovieDetailsPage extends Component {\r\n  state = {\r\n    movie: {},\r\n    cast: [],\r\n    reviews: [],\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const movieId = this.props.match.params.movieId;\r\n    const movie = await SearchApi.fetchDetails(movieId);\r\n    const cast = await SearchApi.fetchCredits(movieId);\r\n    const reviews = await SearchApi.fetchReviews(movieId);\r\n    this.setState({ movie, cast, reviews });\r\n  }\r\n\r\n  handleGoBack = () => {\r\n    const { history, location } = this.props;\r\n    history.push(location?.state?.from || routes.movies);\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      backdrop_path,\r\n      id,\r\n      original_title,\r\n      vote_average,\r\n      overview,\r\n      genres,\r\n      poster_path,\r\n    } = this.state.movie;\r\n    return (\r\n      <div className={style.containerFluid}>\r\n        <button\r\n          type=\"button\"\r\n          className={style.btnOutback}\r\n          onClick={this.handleGoBack}\r\n        >\r\n          Go back\r\n        </button>\r\n\r\n        {id && (\r\n          <MovieContent\r\n            backdrop_path={backdrop_path}\r\n            poster_path={poster_path}\r\n            id={id}\r\n            original_title={original_title}\r\n            vote_average={vote_average}\r\n            overview={overview}\r\n            genres={genres}\r\n          />\r\n        )}\r\n\r\n        {id && (\r\n          <Route\r\n            path={this.props.match.path}\r\n            render={props => {\r\n              return (\r\n                <InfoContent\r\n                  {...props}\r\n                  cast={this.state.cast}\r\n                  reviews={this.state.reviews}\r\n                />\r\n              );\r\n            }}\r\n          />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MovieDetailsPage;"],"sourceRoot":""}